# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "master" ]
  repository_dispatch:
    branches: [ "my-event" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run bot
      run: |
        python start.py
        
      env:
          LANG: "en_US.UTF-8"
          COVID_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          UPDATE_ID: ${{ github.event.client_payload.update_id }}
    
    - name: Repository Dispatch
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.MY_TOKEN}}
        script: |
          const fs = require('fs');
          update_id = fs.readFileSync('/tmp/update_id', 'utf8');
          console.log("This is the last update_id: "+update_id);
          await github.repos.createDispatchEvent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  event_type: "my-event",
                  client_payload: { greeting: "hello", update_id: update_id }
                });
